
# This is a basic workflow to help you get started with Actions

name: Build status

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  pull_request:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.7' # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get golang.org/x/lint/golint
        
    # Run build of the application for Linux x86_64
    - name: Run build for Linux x86_64
      run: GOOS=linux GOARCH=amd64 go build -o gylm

    # Run build of the application for Linux x86
    - name: Run build for Linux x86
      run: | 
        go clean -modcache
        GOOS=linux GOARCH=386 go build -o gylm

    # Run build of the application for Windows x86_64
    - name: Run build for Windows x86_64
      run: |
        go clean -modcache
        GOOS=windows GOARCH=amd64 go build -o gylm

    # Run build of the application for Windows x86
    - name: Run build for Windows x86
      run: |
        go clean -modcache
        GOOS=windows GOARCH=386 go build -o gylm

    # Run build of the application for Windows ARMv8 (64-bit)
    - name: Run build for Windows ARMv8
      run: |
        go clean -modcache
        GOOS=windows GOARCH=arm64 go build -o gylm

    # Run build of the application for MACOS X x86_64
    - name: Run build for MacOS X x86_64
      run: |
        go clean -modcache
        GOOS=darwin GOARCH=amd64 go build -o gylm

    # Run build of the application for MACOS X ARMv8 (64-bit)
    - name: Run build for MacOS X ARMv8
      run: |
        go clean -modcache
        GOOS=darwin GOARCH=arm64 go build -o gylm
